{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anama\\\\GIT\\\\CS-3560-02-02-Bank-ATM-Project\\\\project\\\\src\\\\javascript\\\\LoginPage.js\",\n  _s = $RefreshSig$();\n// LoginPage.js\nimport React, { useState } from 'react';\nimport '../css/loginPage.css';\nimport monopolyMan from '../images/monopolyMan.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const [cardNumber, setCardNumber] = useState('');\n  const [pinNumber, setPinNumber] = useState('');\n  const [error, setError] = useState('');\n  const handleLogin = async () => {\n    setError(''); // Clear any existing errors\n\n    try {\n      const response = await fetch('http://localhost:3000/api/verifyLogin', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          cardNumber,\n          pinNumber\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        localStorage.setItem('accountID', data.accountID); // Store account ID in local storage\n        alert('Login successful!');\n      } else {\n        setError(data.message || 'Login failed');\n      }\n    } catch (err) {\n      setError('An error occurred. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: monopolyMan,\n        alt: \"Monopoly Man\",\n        className: \"bank-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Monopoly Bank\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Card Number\",\n          value: cardNumber,\n          onChange: e => setCardNumber(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"PIN Number\",\n          value: pinNumber,\n          onChange: e => setPinNumber(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogin,\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setCardNumber('');\n            setPinNumber('');\n          },\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginPage, \"9OA6AyOC9V+OJqIUCXqXbipxL4k=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","monopolyMan","jsxDEV","_jsxDEV","LoginPage","_s","cardNumber","setCardNumber","pinNumber","setPinNumber","error","setError","handleLogin","response","fetch","method","headers","body","JSON","stringify","data","json","success","localStorage","setItem","accountID","alert","message","err","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/anama/GIT/CS-3560-02-02-Bank-ATM-Project/project/src/javascript/LoginPage.js"],"sourcesContent":["// LoginPage.js\r\nimport React, { useState } from 'react';\r\nimport '../css/loginPage.css';\r\nimport monopolyMan from '../images/monopolyMan.jpg';\r\n\r\nfunction LoginPage() {\r\n    const [cardNumber, setCardNumber] = useState('');\r\n    const [pinNumber, setPinNumber] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const handleLogin = async () => {\r\n        setError(''); // Clear any existing errors\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:3000/api/verifyLogin', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ cardNumber, pinNumber }),\r\n            });\r\n\r\n            const data = await response.json();\r\n            if (data.success) {\r\n                localStorage.setItem('accountID', data.accountID); // Store account ID in local storage\r\n                alert('Login successful!');\r\n            } else {\r\n                setError(data.message || 'Login failed');\r\n            }\r\n        } catch (err) {\r\n            setError('An error occurred. Please try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-page\">\r\n            <div className=\"login-container\">\r\n                <img src={monopolyMan} alt=\"Monopoly Man\" className=\"bank-logo\" />\r\n                <h1>Monopoly Bank</h1>\r\n                <div>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Card Number\"\r\n                        value={cardNumber}\r\n                        onChange={(e) => setCardNumber(e.target.value)}\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"PIN Number\"\r\n                        value={pinNumber}\r\n                        onChange={(e) => setPinNumber(e.target.value)}\r\n                    />\r\n                    <button onClick={handleLogin}>Sign In</button>\r\n                    <button onClick={() => { setCardNumber(''); setPinNumber(''); }}>Clear</button>\r\n                    {error && <p className=\"error\">{error}</p>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}